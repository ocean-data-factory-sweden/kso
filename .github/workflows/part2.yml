name: part2
on:
  push:
    branches:
      - master
      - dev
    paths-ignore:
      - Dockerfile
      - kso_utils/requirements
      - yolov5_tracker/requirements
      - yolov5/requirements
  pull_request: 
    branches:
      - master
      - dev
    paths-ignore:
      - Dockerfile
      - kso_utils/requirements
      - yolov5_tracker/requirements
      - yolov5/requirements
  workflow_run:
    workflows: [part1]
    types: [completed]
jobs:
  checkimage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      tag: ${{ steps.findimagetag.outputs.tag }}
    steps:
      - name: findimagetag
        id: findimagetag
        #run: |
        #  set -x
        #  if [ "${{github.event_name}}" = "workflow_run" ] ; then 
        #    echo "tag=${{ github.sha }}" >> "$GITHUB_OUTPUT"
        #  else 
        #    echo "tag=test5" >> "$GITHUB_OUTPUT" 
        #  fi 
        #shell: bash
        run: echo "tag=test5" >> "$GITHUB_OUTPUT" 
  print-output-check-image:
    runs-on: ubuntu-latest
    needs: checkimage
    steps:
      - env: 
          TAG: ${{ needs.checkimage.outputs.tag }}
        run: set -x ; echo "$TAG"
     # # echo "tag=test5" >> "$GITHUB_OUTPUT"   
  load-image:
    runs-on: ubuntu-latest
    needs: checkimage
    container:
      image: ghcr.io/${{ github.repository }}:${{ needs.checkimage.outputs.tag }}
      options: --user ${{ needs.configure.outputs.uid_gid }}
      credentials:
        username: '${{ github.actor }}'
        password: '${{ secrets.GHCR_TOKEN }}'
    permissions:
      contents: read
      packages: write
    steps:
      -
        name: who are we
        run: "uname -a && id && cat /etc/os-release && env"
        shell: bash
      
      
  part2:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      -
        name: on workflow_run
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        run: echo 'triggering by workflow_run'
      - 
        name: on PR or push
        if: ${{ github.event.workflow_run.conclusion != 'success' }}
        run: echo 'triggering by PR or push'
      - name: Show GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: print sha
        run: echo ${{ github.sha }} 
      - name: Check docker exists Pablo get list
        run: |
          GHCR_TOKEN=$(echo ${{ secrets.GITHUB_TOKEN }} | base64)
          curl -H "Authorization: Bearer ${GHCR_TOKEN}" https://ghcr.io/v2/ocean-data-factory-sweden/kso/tags/list
      - name: tag-exists
        id: tag-exists
        run: |
          GHCR_TOKEN=$(echo ${{ secrets.GITHUB_TOKEN }} | base64)
          curl --head --fail -H "Authorization: Bearer ${GHCR_TOKEN}" https://ghcr.io/v2/ocean-data-factory-sweden/kso/manifests/test3
        continue-on-error: true
      - name: if check tag was successfull
        if: steps.tag-exists.outcome == 'success'
        run: echo 'the tag exists'
      - name: Delete image from ghcr.io
        if: steps.tag-exists.outcome == 'success' 
        #uses: chipkent/action-cleanup-package@v1.0.1
        #with:
        #  package-name: ${{ github.event.repository.name }}
        #  package-type: 
        #  tag: test3
        #  github-token: ${{ secrets.CI_ACTION_TOKEN }}
        run : |
          GHCR_TOKEN=$(echo ${{ secrets.GITHUB_TOKEN }} | base64)
          curl -L -X DELETE -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${GHCR_TOKEN}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/orgs/ocean-data-factory-sweden/packages/container/test3_newtag
          
      - name: give different tag
        if: steps.tag-exists.outcome == 'success' 
        run: |
          GHCR_TOKEN=$(echo ${{ secrets.GITHUB_TOKEN }} | base64)
          # To pull manifest
          OLD_TAG=test3
          MANIFEST=$(curl -H "Authorization: Bearer ${GHCR_TOKEN}" https://ghcr.io/v2/ocean-data-factory-sweden/kso/manifests/$OLD_TAG)
          # To push a new tag
          CONTENT_TYPE="application/vnd.docker.distribution.manifest.v2+json"
          NEW_TAG=test3_newtag2
          curl -f -X PUT -H "Content-Type: ${CONTENT_TYPE}" -H "Authorization: Bearer ${GHCR_TOKEN}"  -d "${MANIFEST}" "https://ghcr.io/v2/ocean-data-factory-sweden/kso/manifests/$NEW_TAG"
      - name: Check docker exists Pablo get list (2nd time to see if deleted)
        run: |
          GHCR_TOKEN=$(echo ${{ secrets.GITHUB_TOKEN }} | base64)
          curl -H "Authorization: Bearer ${GHCR_TOKEN}" https://ghcr.io/v2/ocean-data-factory-sweden/kso/tags/list
      - name: if check tag failed
        if: steps.tag-exists.outcome == 'failure'
        run: echo 'the tag does not exist'
        