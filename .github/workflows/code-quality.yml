name: Code quality test 
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev
jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      uid_gid: ${{ steps.get-user.outputs.uid_gid }}
    steps:
      - id: get-user
        run: echo "::set-output name=uid_gid::$(id -u):$(id -g)"

    
  pytest:
    runs-on: ubuntu-latest
    needs: [configure]
    container:
      image: ghcr.io/${{ github.repository }}:dev
      options: --user ${{ needs.configure.outputs.uid_gid }}
      credentials:
        username: '${{ github.actor }}'
        password: '${{ secrets.GITHUB_TOKEN }}'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install pylint
        run: python3 -m pip install pylint
      - name: Analyse all .py files with pylint
        run: pylint --errors-only --output-format=colorized **/*.py



# Instead of running in the container, it would be quicker to just only install requirements, but we get the lap build error again, even though this works in the docker. So I don't understand
#      - name: Set up Python 3.8
#        uses: actions/setup-python@v1
#        with:
#          python-version: 3.8
#      - name: Install dependencies
#        run: |
#          python3 -m pip install --upgrade pip
#          python3 -m pip install numpy 
#          python3 -m pip install \
#            numpy \
#            -r yolov5_tracker/requirements.txt \
#            -r yolov5_tracker/yolov5/requirements.txt \
#            -r kso_utils/requirements.txt